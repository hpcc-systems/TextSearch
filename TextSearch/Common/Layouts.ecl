//Layouts for search.
IMPORT TextSearch.Common.Types;

EXPORT Layouts := MODULE
  EXPORT DocumentIngest := RECORD
    UNICODE     identifier;
    STRING50    seqKey;
    UNICODE     slugLine;
    UNICODE     content;
  END;
  EXPORT Document := RECORD(DocumentIngest)
    Types.DocNo id;
  END;
  EXPORT DocIndex := RECORD(Document-content)
    UNSIGNED4   keywords;
    UNSIGNED4   docLength;
    STRING18    wunit;
  END;
  EXPORT DeletedDoc := RECORD
    Types.DocNo id;
    UNICODE     identifier;
  END;
  // Posting Record, generated by parsing the documents, read by resolve.
  EXPORT Posting := RECORD
    Types.DocNo               id;
    Types.Nominal             nominal;
    Types.KWP                 kwpBegin;
    Types.KWP                 kwpEnd;
    Types.Position            start;
    Types.Position            stop;
    Types.Position            textStart;
    Types.Position            textStop;
    Types.Depth               depth;
    Types.Nominal             this;    // this nominal
    Types.Nominal             parent;  // nominal of parent node
    Types.Nominal             path;    // cononical path
    Types.TermLength          len;
    Types.TermType            typTerm;
    Types.DataType            typData;
    Types.Ordinal             preorder;    // position in tree
    Types.Ordinal             parentOrd;  // parent position
    Types.Ordinal             firstOrd;
    Types.Ordinal             lastOrd;
    Types.LetterPattern       lp;
    Types.TermString          term;
    Types.TermString          kw;
  END;
  EXPORT PhrasePosting := RECORD
    Types.TermType            typTerm1;
    Types.DataType            typData1;
    Types.Nominal             nominal1;
    Types.TermType            typTerm2;
    Types.DataType            typData2;
    Types.Nominal             nominal2;
    Types.DocNo               id;
    Types.KWP                 kwpBegin;
    Types.KWP                 kwpEnd;
    Types.Position            start;
    Types.Position            stop;
    Types.Nominal             path;    // cononical path term 1
    Types.Nominal             parent; // parent term 1
    Types.Ordinal             preorder;
    Types.Ordinal             parentOrd;
    Types.Depth               depth1;
    Types.Depth               depth2;
    Types.LetterPattern       lp1;
    Types.LetterPattern       lp2;
    Types.TermString          term1;
    Types.TermString          kw1;
    Types.TermString          term2;
    Types.TermString          kw2;
  END;
  EXPORT PathPosting := RECORD
    Types.Depth       pathLen;          // Depth of terminal node
    Types.Depth       pos;              // ordinal position in path
    Types.Nominal     path;             // Nominal for Path
    Types.DataType    typData;          // Type of terminal node
    Types.Nominal     nominal;          // Nominal of Element or Attribute
  END;
  // Dictionary, combined terms and XML items
  EXPORT TermDictionaryEntry := RECORD
    Types.TermString        term;
    Types.TermString        kw;
    Types.TermType          typTerm;
    Types.DataType          typData;
    Types.Nominal           nominal;
    Types.Frequency         termFreq;
    Types.Frequency         docFreq;
  END;
END;
